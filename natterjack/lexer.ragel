// ---------------------------------------------------------------------------
// 
//    Project Natterjack - Statically Typed Language, Compiler and Runtime
// 
// This file is distributed under the open source MIT license. See LICENSE.md
// for more info.
// 
// ---------------------------------------------------------------------------

#include "lexer.h"
#include "tokenstream.h"

#include <string>
#include <iostream>

%%{

  machine NatterjackLexer;

  integer = [0-9]+ ;
  identifier = [a-z_] ;
   
  main := |*
	  identifier => { std::cout << "identifier" << std::endl; };
	  integer => { std::cout << "integer" << std::endl; };
  *|;  
  
}%%

%%write data;

using namespace natterjack;

Lexer::Lexer(std::string buffer)
	: buffer(buffer)
{
	%%write init;

	p = buffer.c_str();
	pe = p + buffer.size();
	eof = pe;
}
	
Token* Lexer::next()
{
	%%write exec;

	return nullptr;
}
