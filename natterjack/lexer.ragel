// ---------------------------------------------------------------------------
// 
//    Project Natterjack - Statically Typed Language, Compiler and Runtime
// 
// This file is distributed under the open source MIT license. See LICENSE.md
// for more info.
// 
// ---------------------------------------------------------------------------

#include "lexer.h"
#include "tokenstream.h"

#include <string>
#include <iostream>

%%{

  machine NatterjackLexer;

  main := |*
    alpha+ => { std::cout << "identifier" << std::endl; };
    alnum+ => { std::cout << "thingy" << std::endl; };
	space+ => { std::cout << "Space!!!" << std::endl; };
  *|;
  
}%%

%%write data;

using namespace natterjack;

Lexer::Lexer(std::string s)
	: buffer(s), cs(0), act(0), top(0)
{
	%%write init;

	// set up the buffer here
	p = buffer.c_str();
	pe = p + buffer.size();
	eof = pe;
}
	
Token* Lexer::next()
{
	%%write exec;

	if (cs == NatterjackLexer_error) {
		std::cerr << "error!" << std::endl;
	} else {
		std::cout << "all good in the 'hood" << std::endl;
	}

	return nullptr;
}
